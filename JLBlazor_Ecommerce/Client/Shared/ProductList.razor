@inject IProductService ProductService
@implements IDisposable
@using JLBlazor_Ecommerce.Shared.Models;

<ul class="list-unstyled">
    @if (ProductService.Products != null)
    {
        foreach (var item in ProductService.Products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/products/@item.Id">
                        <img class="media-img" src="@item.ImageUrl" alt="@item.Title" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/products/@item.Id">
                        <h4 class="mb-0">@item.Title</h4>
                    </a>
                    <p>@item.Description</p>
                    <h5 class="price">R$@item.Price</h5>
                </div>
            </li>
        }
    }
    else
    {
        <span>Loading...</span>
    }
</ul>

@code {

    protected override async Task OnInitializedAsync()
    {
        ProductService.ProductsChanged += StateHasChanged;
        await Task.CompletedTask;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }
}
